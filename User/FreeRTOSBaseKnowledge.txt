一、任务调度
	1.抢占式调度：主要针对优先级不同的任务，每个任务都有一个优先级，优先级高的任务可以抢占优先级低的任务。
		任务设置的数字越大表示优先级越高。高优先级任务，优先执行。高优先级任务不停止，低优先级任务无法执行。被抢占的任务将会进入就绪态。
	2.时间片调度：主要针对优先级相同的任务，当多个任务的优先级相同时，任务调度器会在每一个时钟节拍到的时候切换认任务。
		同等优先级任务轮流享有相同的CPU时间(可设置)，叫时间片，在FreeRTOS中，一个时间片就等于SysTick中断周期。(循环每个任务执行一个时间片)
		如果一个任务没有执行完一个时间周期就阻塞了，就会直接切换到下一个任务。再到这个任务的时候，还是只会分配一个时间片。
	3.携程式调度：当前执行任务将会一直执行，同时高优先级的任务不会抢占低优先级任务，FreeRTOS现在虽然还支持，但是官方已经表示不再更新携程式调度。
二、任务状态
	1.运行态：正在执行的任务，该任务就处于运行态，注意在STM32中，同一时间仅有一个任务处于运行态。
	2.就绪态：如果该任务已经能够被执行，但当前还未被执行，那么该任务处于就绪态。
	3.阻塞态：如果一个任务因延时或等待外部事件发生，那么这个任务就会处于阻塞态
	4.挂起态：类似暂停，调用函数vTaskSuspend()进入挂起态，需要调用解挂函数vTaskResume()才可以进入就绪态。
	只有就绪态可转变为运行态。其他任务想运行，必须先转变为就绪态。
	就绪列表:pxReadyTaskLists[x],x为任务优先级,硬件为0~31
	阻塞列表:pxDelayedTaskList.
	挂起列表:xSuspendedTaskList.
	新创建的任务直接挂载到就绪列表。调度器总是在所有处于就绪列表的任务中，选择具有最高优先级的任务来执行。
	相同优先级的任务会连接在同一个就绪列表上。
三、任务创建和删除
	1.动态创建:xTaskCreate(),所用内存由FreeRTOS自己分配
	2.静态创建:xTaskCreateStatic(),需要自己定义内存空间
	3.删除任务:vTaskDelete(),